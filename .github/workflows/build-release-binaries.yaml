name: Build and Attach Binaries to Release

on:
  release:
    types:
      - created

jobs:
  build_and_upload:
    strategy:
      matrix:
        platform:
          # Linux
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          # macOS
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-14
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.os }}

    env:
      archive: "try-runtime-${{ matrix.platform.target }}${{ matrix.platform.cpu != '' && format('-{0}', matrix.platform.cpu) || '' }}.tar.gz"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.2"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Add apple target
        if: matrix.platform.os == 'macos-latest'
        run: rustup target add x86_64-apple-darwin

      - name: Add musl target
        if: matrix.platform.os == 'ubuntu-latest'
        run: rustup target add x86_64-unknown-linux-musl

      - name: Install deps for musl build
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools clang build-essential curl llvm-dev libclang-dev linux-headers-generic libsnappy-dev liblz4-dev libzstd-dev libgflags-dev zlib1g-dev libbz2-dev
          sudo ln -s /usr/bin/g++ /usr/bin/musl-g++

      - name: Build Rust project
        run: cargo build --release --target ${{ matrix.platform.target }}

      # Package the try-runtime binary as an archive
      - name: Package try-runtime
        working-directory: ./target/${{ matrix.platform.target }}/release/try-runtime
        run: |
          ${{ env.sha }} try-runtime > try-runtime.sha256
          tar -czf ${{ env.archive }} try-runtime try-runtime.sha256

      - name: Upload Archive to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.platform.target }}/release/try-runtime
          asset_name: ${{ env.archive }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
